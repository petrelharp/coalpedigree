This is python code to simulate whole-genome relatedness among a sample of
individuals in populations exchanging migrants and changing sizes.  It works in
discrete (nonoverlapping) generations, uses diploid individuals, and makes no
further approximations.  It simulates in reverse time.

The running time and memory usage is linear in the number of samples and the
size of the genome.  Memory use increases gradually after the first 10
generations or so; if it is getting too big you can send it a single interrupt
(i.e. hit ctrl-c or 'kill -SIGINT' it) and it will finish the current
generation, write out the data, and exit.  If you send it another interrupt it
will terminate immediately.  Memory usage is linear in the number of
generations, and running time is quadratic.  These things follow from the fact
that the number of segments each genome is broken up into increases linearly
with time.  Writing out the data takes a significant fraction of the running
time; how much data you get depends strongly on the length threshold for gaps
to write out and on the effective population size (smaller Ne = more blocks).

Running with 1000 samples for 200 generations takes about 6G of memory by the end,
and about 11 hours.


coalpedigree.py       -- module
sim-ibd-pedigree.py   -- a script to run it, do 'python sim-ibd-pedigree.py -h' for help
sim-demographics-*.py -- an example input file for sim-ibd-pedigree.py
test-pedigree-sims.py -- various unordered examples for cutting and pasting into the interpreter.

This is not well documented yet, but is simple, and might be useful to someone.

------------------------

To cite this software, please cite

@MISC{ralph2012coalpedigree
author = {Ralph, Peter},
title = {coalpedigree: {Reverse}-time, whole-genome simulation},
month = Oct,
year = {2012},
url = {https://github.com/petrelharp/coalpedigree}
}
